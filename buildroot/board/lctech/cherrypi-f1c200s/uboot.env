mmc_kernel=kernel.itb
mmc_env=uboot.env
mmc_ubootpart=1
mmc_bootpart=2
mmc_rootpart=3

nand_size=0x8000000
nand_kernel_offset=0x100000
nand_kernel_length=0x700000

kernel_addr_r=0x81000000
bootm_size=0x1800000

stderr=serial
stdin=serial
stdout=serial

boot_slot_0=empty
boot_slot_1=empty
scan_boot_slot_0=if mmc dev 0; then setenv boot_slot_0 mmc0; fi;
scan_boot_slot_1=if mtd list; then setenv boot_slot_1 spi-nand; fi;
scan_boot_slot=run scan_boot_slot_0; run scan_boot_slot_1; echo "========================="; echo "Boot Device: ${boot_device}"; echo "Boot Slot 0: ${boot_slot_0}"; echo "Boot Slot 1: ${boot_slot_1}"; echo "=========================";

console_args=console=ttyS0,115200 earlycon=uart8250,mmio,0x1c25400 earlyprintk
bootargs_nand=setenv bootargs ${console_args} rootfstype=ubifs ubi.mtd=ubi root=ubi0:rootfs rootwait init=/preinit ofstype=ubifs ofsdev=ubi0:rootfs_data
bootargs_mmc=setenv bootargs ${console_args} rootfstype=ext4 root=/dev/mmcblk0p${mmc_rootpart} rootwait

dfu_wait_timeout=4
mmc_dfu_info=setenv dfu_alt_info "all raw 0x0 0x37000;u-boot raw 0x10 0x7f0;boot part ${dfu_mmc_dev} ${mmc_bootpart};rom part ${dfu_mmc_dev} ${mmc_rootpart};kernel fat ${dfu_mmc_dev} ${mmc_bootpart}"
nand_dfu_info=setenv dfu_alt_info "all raw 0x0 ${nand_size};u-boot raw 0x0 0x100000;kernel raw ${nand_kernel_offset} ${nand_kernel_length};ubi raw 0x800000 0x7800000"
dfu_mmc=mmc dev ${dfu_mmc_dev}; run mmc_dfu_info; dfu 0 mmc ${dfu_mmc_dev} ${dfu_wait_timeout};
dfu_nand=run nand_dfu_info; dfu 0 mtd spi-nand0 ${dfu_wait_timeout};
dfu_boot=if test "${boot_slot_1}" = "spi-nand"; then echo "DFU waiting on SPI-NAND..."; run dfu_nand; fi; if test "${boot_slot_1}" = "empty" && test "${boot_slot_0}" = "mmc0"; then echo "DFU waiting on MMC0..."; setenv dfu_mmc_dev 0; run dfu_mmc; fi;

fel_boot=echo "Booting from FEL..."; bootm ${kernel_addr_r};
mmc_boot=mmc dev ${devnum}; echo "Booting from MMC${devnum}..."; run bootargs_mmc; load mmc ${devnum}:${mmc_bootpart} $kernel_addr_r ${mmc_kernel}; bootm ${kernel_addr_r};
nand_boot=echo "Booting from SPI-NAND..."; run bootargs_nand; mtd read spi-nand0 ${kernel_addr_r} ${nand_kernel_offset} ${nand_kernel_length}; bootm ${kernel_addr_r};

bootcmd_fel=if test "${boot_device}" = "fel"; then run fel_boot; fi;
bootcmd_dfu=if test "${boot_device}" != "mmc0" || test "${boot_slot_1}" = "empty"; then run dfu_boot; fi;
bootcmd_mmc0=if test "${boot_device}" = "mmc0"; then devnum=0; run mmc_boot; fi;
bootcmd_spi=if test "${boot_device}" = "spi"; then run nand_boot; fi;
bootcmd_loopdfu=setenv dfu_wait_timeout; run bootcmd_dfu;

boot_targets=fel dfu mmc0 spi loopdfu

distro_bootcmd=run scan_boot_slot; for target in ${boot_targets}; do run bootcmd_${target}; done
